{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-16T14:35:51.307Z",
    "end": "2025-05-16T14:36:27.054Z",
    "duration": 35747,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "31f8af27-8340-41a9-9579-697efa834119",
      "title": "",
      "fullFile": "cypress\\e2e\\TC_CP_Unidades ejecutoras - Crear Usuario y profesional de la salud.cy.js",
      "file": "cypress\\e2e\\TC_CP_Unidades ejecutoras - Crear Usuario y profesional de la salud.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "97859fcb-6cd7-494d-9ee0-33b2b0ed570d",
          "title": "Crear Profesioal de la Salud-Unidades ejecutoras",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "debería iniciar sesión con éxito",
              "fullTitle": "Crear Profesioal de la Salud-Unidades ejecutoras debería iniciar sesión con éxito",
              "timedOut": null,
              "duration": 29419,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Llama a la función login \ncy.login_CORE();\n// Verifica que el login haya sido exitoso\ncy.url().should('not.include', '/login');\nlet contador = 0;\nconst rutaArchivoExcel = 'cypress/fixtures/datos2.xlsx';\n// Leer los datos del archivo Excel\ncy.leerExcel(rutaArchivoExcel).then(datosExcel => {\n  // Mostrar los datos leídos\n  console.log(datosExcel);\n  // Recorrer los datos del archivo Excel\n  for (let i = 1; i < datosExcel.length; i++) {\n    // Comenzamos desde 1 para saltarnos la fila de encabezados\n    // Tomar el valor de la primera columna (DNI)\n    cy.wait(1000);\n    cy.get(\"#btn_menu_desplegable\").should('be.visible').click();\n    cy.wait(1000);\n    cy.get(\"#spn_modulo_medical_records_list_executing_units\").should('be.visible').click();\n    cy.wait(1000);\n    cy.get(\"#btn_menu_desplegable\").should('be.visible').click();\n    cy.wait(1000);\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    //Buscar Unidad Ejecutora------------------\n    // Usar los datos del Excel\n    // Provincia\n    cy.get('#ddl_provincia_lista_unidad_ejecutora').scrollIntoView().should('be.visible');\n    const PROVINCIA = datosExcel[i][6]; // Primer fila, primera columna (usando índices 0 basados)     \n    cy.get('#ddl_provincia_lista_unidad_ejecutora', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(PROVINCIA).type('{enter}');\n    // Usar los datos del Excel\n    // Unidad Ejecutora\n    cy.get('#input_unidad_ejecutora').scrollIntoView().should('be.visible');\n    const UNIDADE = datosExcel[i][7]; // Primer fila, primera columna (usando índices 0 basados)     \n    cy.get('#input_unidad_ejecutora', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(UNIDADE).click();\n    cy.wait(10).tab();\n    cy.get(\"#btn_buscar\").should('be.visible').click();\n    cy.get('[id^=\"btn_mas_opciones_unidad_ejecutora_\"]').first().click();\n    cy.get('[id^=\"btn_administrar_unidad\"]').click();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.wait(10).tab();\n    cy.get(\"#btn_crear_profesional_salud\").should('be.visible').click();\n    cy.get('#ddl_tipo_identificacion') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_tipo_identificacion_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(1) // Toma el primer elemento\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    // Usar los datos del Excel\n    // Ingresar DNI\n    cy.get('#txt_tipo_identificacion').scrollIntoView().should('be.visible');\n    const DNI = datosExcel[i][0]; // Primer fila, primera columna (usando índices 0 basados)     \n    cy.get('#txt_tipo_identificacion', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(DNI).click();\n    cy.get(\"#btn_validar\").should('be.visible').click();\n    cy.wait(1000);\n    cy.get(\"#btn_crear_usuario\").should('be.visible').click();\n    cy.wait(1000);\n    // Usar los datos del Excel\n    // Ingresar NOMBRE\n    const NOMBRE = datosExcel[i][1]; // Primer fila, segunda columna\n    cy.get('#input_primer_nombre', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(NOMBRE).click();\n    // Usar los datos del Excel\n    // Ingresar APELLIDO\n    const APELLIDO1 = datosExcel[i][2]; // Primer fila, segunda columna\n    cy.get('#input_primer_apellido', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(APELLIDO1).click();\n    // Usar los datos del Excel\n    // Ingresar APELLIDO MATERNO\n    const APELLIDO2 = datosExcel[i][3]; // Primer fila, segunda columna\n    cy.get('#input_segundo_apellido', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(APELLIDO2).click();\n    // Usar los datos del Excel\n    // Ingresar FECHA NACIMIENTO\n    const FECHANAC = datosExcel[i][4]; // Primer fila, segunda columna\n    cy.get('#input_fecha_nacimiento', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(FECHANAC).click();\n    cy.wait(500).tab();\n    cy.wait(500);\n    // Pais\n    cy.get('#ddl_pais_nacimiento') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_pais_nacimiento_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(163) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    // Nacionalidad\n    cy.get('#ddl_nacionalidad') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_nacionalidad_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(37) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    // Etnia\n    cy.get('#ddl_etnia') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_etnia_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(1) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    // Estado\n    cy.get('#ddl_estado_civil') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_estado_civil_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#btn_paciente_asegurado_false').click().should('be.checked');\n    cy.wait(100).tab();\n    cy.get('#ddl_tipo_paciente') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_tipo_paciente_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#ddl_tipo_beneficiario') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_tipo_beneficiario_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(7) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.get('#ddl_ocupacion') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_ocupacion_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(8) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#ddl_estudios') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_estudios_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(7) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#ddl_sexo') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_sexo_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#ddl_idioma') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_idioma_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#ddl_grupo_sanguineo') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_grupo_sanguineo_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(6) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.get(\"#btn_siguiente\").should('be.visible').click();\n    cy.wait(100).tab();\n    cy.get('#input_provincia') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#input_provincia_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(1) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#input_distrito') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#input_distrito_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#input_corregimiento') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#input_corregimiento_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#input_barrio') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#input_barrio_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get(\"#btn_siguiente\").should('be.visible').click();\n    cy.wait(2000).tab();\n    cy.get(\"#btn_siguiente\").should('be.visible').click();\n    cy.wait(1000).tab();\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.wait(2000).tab();\n    //Crear Profesional de la Salud-------------------------------------------------------------------------------------------------\n    cy.wait(100).tab();\n    cy.get('#input_numero_empleado').scrollIntoView().should('be.visible');\n    cy.get('#input_numero_empleado', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(DNI).click();\n    cy.get('#input_numero_seguro_social', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(DNI).click();\n    cy.get('#input_cargo_ocupado', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(DNI).click();\n    cy.wait(100).tab();\n    //correo\n    const CORREO = datosExcel[i][5]; // Primer fila, segunda columna\n    cy.get('#input_correo_electronico_institucional', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(CORREO).click();\n    cy.wait(500).tab();\n    cy.wait(500);\n    //turno\n    cy.get('#ddl_turno') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_turno_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(2) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    //Horario\n    cy.get('#input_horario_turno', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type('12:00 AM').click();\n    cy.wait(100).tab();\n    cy.get('#input_horario_turno_fin', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type('12:00 AM').click();\n    cy.wait(100).tab();\n    cy.get(\"#btn_siguiente\").should('be.visible').click();\n    cy.wait(1000);\n    cy.wait(100).tab();\n    cy.get('#ddl_seleccionar_profesion') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_seleccionar_profesion_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#input_numero_registro', {\n      timeout: 1000\n    }).should('exist').should('be.visible').type(DNI).click();\n    cy.wait(100).tab();\n    cy.get(\"#btn_agregar_profesion\").should('be.visible').click();\n    cy.wait(1000);\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.get(\"#btn_siguiente\").should('be.visible').click();\n    cy.wait(1000);\n    cy.wait(100).tab();\n    // Incrementar el contador\n    contador++;\n    // Mostrar en la consola el contador y el DNI\n    cy.log(`Contador: ${contador}, DNI: ${DNI}`);\n  }\n});\ncy.wait(1000);\nconsole.log('¡Prueba exitosa!');\ncy.log('¡Prueba exitosa!');",
              "err": {
                "message": "Error: AssertionError: Timed out retrying after 4000ms: Expected to find element: `#btn_crear_usuario`, but never found it.",
                "estack": "Error: AssertionError: Timed out retrying after 4000ms: Expected to find element: `#btn_crear_usuario`, but never found it.",
                "diff": null
              },
              "uuid": "5493d2c6-16e8-4942-9b07-71ac94433d1d",
              "parentUUID": "97859fcb-6cd7-494d-9ee0-33b2b0ed570d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5493d2c6-16e8-4942-9b07-71ac94433d1d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 29419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}
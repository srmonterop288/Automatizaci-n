{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-16T14:27:43.671Z",
    "end": "2025-05-16T14:28:34.324Z",
    "duration": 50653,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "19b310e9-45df-4879-ad0a-915984db5b08",
      "title": "",
      "fullFile": "cypress\\e2e\\Crear_pacientes.cy.js",
      "file": "cypress\\e2e\\Crear_pacientes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2432a5eb-69aa-461c-b486-723b229956f3",
          "title": "Crear Pacientes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "debería iniciar sesión con éxito",
              "fullTitle": "Crear Pacientes debería iniciar sesión con éxito",
              "timedOut": null,
              "duration": 37905,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Llama a la función login \ncy.login_CORE();\n// Verifica que el login haya sido exitoso\ncy.url().should('not.include', '/login');\ncy.wait(1000);\ncy.get(\"#btn_menu_desplegable\").should('be.visible').click();\ncy.wait(1000);\ncy.get(\"#spn_modulo_medical_records_list_user\").should('be.visible').click();\ncy.wait(1000);\ncy.get(\"#btn_menu_desplegable\").should('be.visible').click();\ncy.wait(1000);\ncy.get(\"#btn_crear_usuario\", {\n  timeout: 10000\n}) // Espera hasta 10 segundos\n.should('be.visible') // Espera a que el botón sea visible\n.click();\ncy.get('#ddl_tipo_identificacion') // Selecciona el campo de búsqueda\n.click({\n  force: true\n}); // Forza el clic si es necesario\ncy.wait(500);\ncy.get('#ddl_tipo_identificacion_list .ant-select-item-option') // Selecciona los elementos de la lista\n.first() // Toma el primer elemento\n.click(); // Hace clic en el primer elemento\ncy.wait(100).tab();\nlet contador = 0;\nconst rutaArchivoExcel = 'cypress/fixtures/datos.xlsx';\n// Leer los datos del archivo Excel\ncy.leerExcel(rutaArchivoExcel).then(datosExcel => {\n  // Mostrar los datos leídos\n  console.log(datosExcel);\n  // Recorrer los datos del archivo Excel\n  for (let i = 1; i < datosExcel.length; i++) {\n    // Comenzamos desde 1 para saltarnos la fila de encabezados\n    // Tomar el valor de la primera columna (DNI)\n    // Usar los datos del Excel\n    // Ingresar DNI\n    const DNI = datosExcel[i][0]; // Primer fila, primera columna (usando índices 0 basados)\n    if (DNI && DNI.trim() !== '') {\n      // Si el DNI es válido, proceder con la acción\n      cy.window().then(win => {\n        win.alert('El DNI es correcto');\n      });\n    } else {\n      // Si el DNI está vacío o no es válido, lanzar una alerta\n      cy.window().then(win => {\n        win.alert('Prueba exitosa');\n        cy.log('Prueba Finalizada: correctamente');\n        cy.pause();\n      });\n    }\n    cy.get('#input_numero_cedula', {\n      timeout: 1000\n    }) // Espera hasta 1 segundo\n    .should('exist') // Asegura que el campo exista en el DOM\n    .scrollIntoView().should('be.visible').type(DNI); // Escribe el valor de la variable DNI en el campo\n    cy.contains('span.ant-breadcrumb-link', 'Listado y búsqueda de usuarios').scrollIntoView() // Lleva el elemento al viewport\n    .should('be.visible');\n    cy.get(\"#btn_validar_identificacion\", {\n      timeout: 10000\n    }) // espera hasta 10 segundos a que aparezca en el DOM\n    .should('be.visible') // espera hasta que sea visible\n    .scrollIntoView() // asegura que esté en el viewport\n    .click(); // hace clic\n    // Usar los datos del Excel\n    // Ingresar NOMBRE\n    const NOMBRE = datosExcel[i][1]; // Primer fila, segunda columna\n    cy.get('#input_primer_nombre', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .scrollIntoView() // Asegura que esté dentro del viewport\n    .type(NOMBRE); // Escribe el valor de la variable NOMBRE en el campo\n    // Usar los datos del Excel\n    // Ingresar APELLIDO\n    const APELLIDO1 = datosExcel[i][2]; // Primer fila, segunda columna\n    cy.get('#input_primer_apellido', {\n      timeout: 1000\n    }) // Espera hasta 1 segundo\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .scrollIntoView() // Asegura que esté dentro del viewport\n    .type(APELLIDO1); // Escribe el valor de la variable APELLIDO1 en el campo\n    // Usar los datos del Excel\n    // Ingresar APELLIDO Materno\n    const APELLIDO2 = datosExcel[i][3]; // Primer fila, segunda columna\n    cy.get('#input_segundo_apellido', {\n      timeout: 1000\n    }) // Espera hasta 1 segundo\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .scrollIntoView() // Asegura que el campo esté en el viewport\n    .type(APELLIDO2); // Escribe el valor de la variable APELLIDO2 en el campo\n    // Usar los datos del Excel\n    // Ingresar FECHANAC\n    const FECHANAC = datosExcel[i][4]; // Primer fila, segunda columna\n    cy.get('#input_fecha_nacimiento', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .scrollIntoView() // Asegura que el campo esté dentro del viewport\n    .type(FECHANAC); // Escribe el valor de la variable FECHANAC en el campo\n    cy.wait(500).tab();\n    // Pais\n    cy.get('#ddl_pais_nacimiento', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .click({\n      force: true\n    }); // Forza el clic si el campo no es interactuable\n    cy.get('#ddl_pais_nacimiento_list .ant-select-item-option', {\n      timeout: 2000\n    }) // Asegura que los elementos de la lista existan\n    .should('be.visible') // Asegura que los elementos sean visibles\n    .eq(163) // Selecciona el elemento en la posición 163\n    .scrollIntoView() // Asegura que esté en el viewport\n    .click(); // Hace clic en el elemento\n    cy.wait(100).tab();\n    // Nacionalidad\n    cy.get('#ddl_nacionalidad', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .click(); // Realiza el clic si el campo es visible e interactuable\n    cy.get('#ddl_nacionalidad_list .ant-select-item-option', {\n      timeout: 2000\n    }) // Espera hasta que los elementos de la lista estén presentes\n    .should('be.visible') // Asegura que los elementos sean visibles\n    .eq(37) // Selecciona el elemento en la posición 37\n    .scrollIntoView() // Asegura que el elemento esté en el viewport\n    .click(); // Hace clic en el elemento seleccionado\n    cy.wait(100).tab();\n    // Etnia\n    cy.get('#ddl_etnia', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .click(); // Realiza el clic si el campo es visible e interactuable\n    cy.get('#ddl_etnia_list .ant-select-item-option', {\n      timeout: 2000\n    }) // Espera hasta que los elementos de la lista estén disponibles\n    .should('be.visible') // Asegura que los elementos sean visibles\n    .eq(1) // Selecciona el elemento en la posición 1\n    .scrollIntoView() // Asegura que el elemento esté dentro del viewport\n    .click(); // Hace clic en el elemento seleccionado\n    cy.wait(100).tab();\n    //Religion\n    cy.get('#ddl_religion', {\n      timeout: 2000\n    }).should('exist').should('be.visible') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_religion_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .scrollIntoView() // asegura que esté en el viewport\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    // Estado\n    cy.get('#ddl_estado_civil', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .click(); // Realiza el clic si el campo es visible e interactuable\n    cy.get('#ddl_estado_civil_list .ant-select-item-option', {\n      timeout: 2000\n    }) // Espera hasta que los elementos de la lista estén disponibles\n    .should('be.visible') // Asegura que los elementos sean visibles\n    .eq(0) // Selecciona el primer elemento (índice 0)\n    .scrollIntoView() // Asegura que el elemento esté en el viewport\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    // Tipo beneficiario\n    cy.get('#ddl_tipo_beneficiario', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .click(); // Realiza el clic si el campo es visible e interactuable\n    cy.get('#ddl_tipo_beneficiario_list .ant-select-item-option', {\n      timeout: 2000\n    }) // Espera hasta que los elementos de la lista estén disponibles\n    .should('be.visible') // Asegura que los elementos sean visibles\n    .eq(7) // Selecciona el elemento en la posición 7 (índice 7 es el octavo elemento)\n    .scrollIntoView() // Asegura que el elemento esté dentro del viewport\n    .click(); // Hace clic en el elemento seleccionado\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    // Ocupacion\n    cy.get('#ddl_ocupacion', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .click(); // Realiza el clic si el campo es visible e interactuable\n    cy.get('#ddl_ocupacion_list .ant-select-item-option', {\n      timeout: 2000\n    }) // Espera hasta que los elementos de la lista estén disponibles\n    .should('be.visible') // Asegura que los elementos sean visibles\n    .eq(8) // Selecciona el noveno elemento (índice 8)\n    .scrollIntoView() // Asegura que el elemento esté dentro del viewport\n    .click(); // Hace clic en el elemento seleccionado\n    cy.wait(100).tab(); // Espera 100ms antes de pasar a la siguiente acción (tabulación)\n    // Estudios\n    cy.get('#ddl_estudios', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .click(); // Realiza el clic si el campo es visible e interactuable\n    cy.get('#ddl_estudios_list .ant-select-item-option', {\n      timeout: 2000\n    }) // Espera hasta que los elementos de la lista estén disponibles\n    .should('be.visible') // Asegura que los elementos sean visibles\n    .eq(7) // Selecciona el octavo elemento (índice 7)\n    .scrollIntoView() // Asegura que el elemento esté dentro del viewport\n    .click(); // Hace clic en el elemento seleccionado\n    cy.wait(100).tab(); // Espera 100ms antes de pasar a la siguiente acción (tabulación)\n    // Sexo\n    cy.get('#ddl_sexo', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos para que el campo esté disponible\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .click(); // Realiza el clic si el campo es visible e interactuable\n    cy.get('#ddl_sexo_list .ant-select-item-option', {\n      timeout: 2000\n    }) // Espera hasta que los elementos de la lista estén disponibles\n    .should('be.visible') // Asegura que los elementos sean visibles\n    .eq(0) // Selecciona el primer elemento (índice 0)\n    .scrollIntoView() // Asegura que el elemento esté en el viewport\n    .click(); // Hace clic en el elemento seleccionado\n    cy.wait(100).tab(); // Espera 100ms antes de pasar a la siguiente acción (tabulación)\n    // Idioma                      \n    cy.get('#ddl_idioma', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos para que el campo esté disponible\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .click(); // Realiza el clic si el campo es visible e interactuable\n    cy.get('#ddl_idioma_list .ant-select-item-option', {\n      timeout: 2000\n    }) // Espera hasta que los elementos de la lista estén disponibles\n    .should('be.visible') // Asegura que los elementos sean visibles\n    .eq(0) // Selecciona el primer elemento (índice 0)\n    .scrollIntoView() // Asegura que el elemento esté dentro del viewport\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    // Sangre\n    cy.get('#ddl_grupo_sanguineo', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos para que el campo esté disponible\n    .should('exist') // Asegura que el campo esté presente en el DOM\n    .should('be.visible') // Asegura que el campo sea visible\n    .click(); // Realiza el clic si el campo es visible e interactuable\n    cy.get('#ddl_grupo_sanguineo_list .ant-select-item-option', {\n      timeout: 2000\n    }) // Espera hasta que los elementos de la lista estén disponibles\n    .should('be.visible') // Asegura que los elementos sean visibles\n    .eq(6) // Selecciona el séptimo elemento (índice 6)\n    .scrollIntoView() // Asegura que el elemento esté dentro del viewport\n    .click(); // Hace clic en el elemento seleccionado\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.contains('span.ant-breadcrumb-link', 'Listado y búsqueda de usuarios').scrollIntoView() // Lleva el elemento al viewport\n    .should('be.visible');\n    cy.get('#ddl_tipo_paciente', {\n      timeout: 2000\n    }) // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_tipo_paciente_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#btn_paciente_asegurado_false', {\n      timeout: 2000\n    }).click().should('be.checked');\n    cy.wait(100).tab();\n    cy.get('#btn_siguiente', {\n      timeout: 2000\n    }) // Espera hasta 2 segundos para que el botón esté disponible\n    .should('exist') // Asegura que el botón esté presente en el DOM\n    .scrollIntoView() // Asegura que el botón esté visible en el viewport\n    .should('be.visible') // Asegura que el botón sea visible\n    .click();\n    cy.get('#input_provincia') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#input_provincia_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(1) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#input_distrito') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#input_distrito_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#input_corregimiento') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#input_corregimiento_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get('#input_barrio') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#input_barrio_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .eq(0) // Toma el elemento 10\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    cy.get(\"#btn_siguiente\").should('be.visible').click();\n    cy.wait(2000).tab();\n    cy.get(\"#btn_siguiente\").should('be.visible').click();\n    cy.wait(1000).tab();\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.get('#input_numero_documento').type(DNI);\n    cy.get(\"#btn_buscar\").should('be.visible').click();\n    cy.wait(2000).tab();\n    cy.get(\"#btn_crear_usuario\").should('be.visible').click();\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.wait(100).tab();\n    cy.get('#ddl_tipo_identificacion') // Selecciona el campo de búsqueda\n    .click({\n      force: true\n    }); // Forza el clic si es necesario\n    cy.wait(500);\n    cy.get('#ddl_tipo_identificacion_list .ant-select-item-option') // Selecciona los elementos de la lista\n    .first() // Toma el primer elemento\n    .click(); // Hace clic en el primer elemento\n    cy.wait(100).tab();\n    // Incrementar el contador\n    contador++;\n    // Mostrar en la consola el contador y el DNI\n    cy.log(`Contador: ${contador}, DNI: ${DNI}`);\n  }\n});\ncy.wait(1000);\nconsole.log('¡Prueba exitosa!');\ncy.log('¡Prueba exitosa!');",
              "err": {
                "message": "Error: CypressError: Timed out retrying after 4000ms: `cy.type()` failed because this element is `disabled`:\n\n`<input autocomplete=\"off\" type=\"\" name=\"primerNombre\" id=\"input_primer_nombre\" disabled=\"\" class=\"ant-input ant-input-disabled ant-input-lg css-1rqnfsa ant-input-outlined ant-input-compact-item ant-input-compact-first-item ant-input-compact-last-item\" value=\"\" style=\"border-radius: 6px;\">`\n\nFix this problem, or use `{force: true}` to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "Error: CypressError: Timed out retrying after 4000ms: `cy.type()` failed because this element is `disabled`:\n\n`<input autocomplete=\"off\" type=\"\" name=\"primerNombre\" id=\"input_primer_nombre\" disabled=\"\" class=\"ant-input ant-input-disabled ant-input-lg css-1rqnfsa ant-input-outlined ant-input-compact-item ant-input-compact-first-item ant-input-compact-last-item\" value=\"\" style=\"border-radius: 6px;\">`\n\nFix this problem, or use `{force: true}` to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "diff": null
              },
              "uuid": "b95ddbee-dd1a-4290-b1ab-b04ca6669f0b",
              "parentUUID": "2432a5eb-69aa-461c-b486-723b229956f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b95ddbee-dd1a-4290-b1ab-b04ca6669f0b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37905,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}
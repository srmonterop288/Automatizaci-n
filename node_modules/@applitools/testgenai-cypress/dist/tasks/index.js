const fs= require('fs');
const {dirname} = require("path");

function readFileIfExists(filePath) {
    try {
        const content = fs.readFileSync(filePath, 'utf8');
        return content;
    } catch (e) {
        if (e.code === 'ENOENT') {
            // File does not exist
            return null;
        }
        throw e; // Rethrow other errors
    }
}

function writeFile(args) {
    if(!args.options){
        args.options = {}
    }
    args.options.flag = args.options.append ? 'a' : 'w';
    args.options.encoding = args.options.encoding || 'utf8';

    const dir = dirname(args.filePath); // Get the directory path
    if (!fs.existsSync(dir)) { // Check if the directory exists
        fs.mkdirSync(dir, { recursive: true }); // Create the directory if it doesn't exist
    }

    if (args.options.isBase64) {
        // Decode the base64 content before writing
        const content = Buffer.from(args.content, 'base64');
        fs.writeFileSync(args.filePath, content, args.options);
    } else {
        // Write the content directly if it's not base64
        fs.writeFileSync(args.filePath, args.content, args.options);
    }    return true;
}

function logToConsole(message) {
    console.log(message)
    return null;
}

const tasks = {
    readFileIfExists,
    logToConsole,
    writeFile
}

const testGenAICypressTasksSetup = (on) => {
    on('task', {...tasks});
}

module.exports = {
    testGenAICypressTasksSetup
}
export declare function sleepAsync(ms: number): Promise<unknown>;
export declare function last(array: any[]): any;
export declare function first(array: any[]): any;
export default function uuidv4(): any;
export declare function groupBy(xs: any[], key: string): any;
export declare const toSentenceCase: (camelCaseString: any) => any;
export declare const escapeRegExp: (string: any) => any;
export declare const replaceSpecialChars: (string: any) => any;
export declare const escapeSpecialChars: (string: any) => any;
export declare const base64ToString: (input: any) => string;
export declare const isString: (value: any) => value is string | String;
export declare const isValidHttpUrl: (input: string) => boolean;
export declare const showXHRLogs: (value: boolean) => void;
export declare const isFileInput: (el: any) => boolean;
export declare const isInputNode: (el: HTMLElement) => boolean;
export declare const isElVisible: (el: any) => boolean;
export declare const isObscuredByOtherElement: (doc: Document, targetEl: Element) => boolean;
export declare const hasElementText: (el: HTMLElement, text?: string) => any;
export declare const normalizeWhiteChars: (text: any) => string;
export declare const now: () => string;
export declare const blobToBase64: (blob: any) => Promise<unknown>;

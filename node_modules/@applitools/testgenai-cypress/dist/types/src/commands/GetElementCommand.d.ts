import GetElementCommandResult from "../models/GetElementCommandResult";
export default class GetElementCommand {
    private get doc();
    private readonly elSearchRetryTime;
    private readonly minApplyAutohealTimeout;
    private readonly mainSelector;
    private readonly options;
    private readonly testTitle;
    private readonly actionContextId;
    private elSelector;
    private elFinder;
    private expectedInnerText?;
    constructor(selector: any, options: any, actionContextId: any, testTitle: any);
    get parentSelectors(): string[];
    get isMainSelectorXPath(): boolean;
    getLogSelector(selector: string): string;
    isElMainSelOnPage(timeout?: number, requiredInnerText?: string): Promise<boolean>;
    canBeProcessedByCypress(getElFunction: (string: any, any: any) => HTMLElement): Promise<boolean>;
    private get currentPomAutohealDataId();
    private get isPomElementGetCommand();
    process(timeout?: number, requiredInnerText?: string): Promise<GetElementCommandResult>;
    private get autohealKey();
    private getVariableValues;
    private generateAutohealDataForElement;
    private elNotFoundException;
    private retryNotFound;
    private retryObscured;
    private get applyAutohealTimeout();
}
